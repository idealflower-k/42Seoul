
과제 이름: microshell

필요한 파일: *.c, *.h

사용 가능한 함수: malloc, free, write, close, fork, waitpid, signal,
kill, exit, chdir, execve, dup, dup2, pipe, strcmp, strncmp

쉘 명령어를 실행하듯이 동작하는 프로그램을 작성하십시오.

- 실행할 명령어는 이 프로그램의 인수로 전달됩니다.

- 실행 가능한 파일의 경로는 절대 경로 또는 상대 경로이지만,
프로그램이 경로를 구성하면 안됩니다(PATH 변수를 사용하는 등).

- bash에서처럼 “|”와 “;”를 구현해야 합니다.

- 우리는 절대로 “|”를 바로 앞이나 뒤에 오도록 시도하지 않습니다.

- 프로그램은 인수로 경로만 있는 내장 명령어 cd를 구현해야 합니다
('-' 또는 매개변수 없이는 사용하지 않음).

- cd가 잘못된 수의 인수를 가지면 프로그램은 STDERR에
“error: cd: bad arguments”와 '\n'을 출력해야 합니다.

- cd가 실패하면 프로그램은 STDERR에
“error: cd: cannot change directory to path_to_change”와 '\n'을 출력해야 합니다.
여기서 path_to_change는 cd에 대한 인수로 대체됩니다.

- cd 명령은 절대로 “|” 바로 앞이나 뒤에 오지 않습니다.

- 어떤 유형의 와일드카드(*, ~ 등)도 관리할 필요가 없습니다.

- 환경 변수($BLA…)를 관리할 필요가 없습니다.

- execve와 chdir를 제외한 시스템 호출이 오류를 반환하면 프로그램은 즉시
“error: fatal”을 STDERR에 '\n'과 함께 출력하고 프로그램은 종료되어야 합니다.

- execve가 실패하면 “error: cannot execute executable_that_failed”을
STDERR에 '\n'과 함께 출력해야 합니다.여기서 executable_that_failed는
실패한 실행 파일의 경로로 대체됩니다(이는 execve의 첫 번째 인수이어야 합니다).

- “열린 파일”의 수를 30개 미만으로 제한하더라도
프로그램은 수백 개의 “|”를 관리할 수 있어야 합니다.

예제
$>./microshell /bin/ls | /usr/bin/grep microshell “;” /bin/echo “i love my microshell”
microshell
i love my microshell
$>./microshell /bin/echo WOOT “; /bin/echo NOPE ;” “; ;” “;” /bin/echo YEAH
WOOT ; /bin/echo NOPE ;
YEAH

힌트: execve에 환경 변수를 전달하는 것을 잊지 마세요.
힌트: 파일 디스크립터 누수는 허용되지 않습니다.
